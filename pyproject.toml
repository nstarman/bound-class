[build-system]
  requires = [
    "extension-helpers",
    "setuptools>=45",
    "wheel"
  ]

  build-backend = 'setuptools.build_meta'

[project]
  name = "bound_class.core"
  version = "0.1.0"
  description = "Classes bound to another class."
  readme = "README.rst"
  requires-python = ">=3.8"
  license = {file = "LICENSE"}
  keywords = ["python"]
  authors = [
    {name = "Nathaniel Starkman", email = "n.starkman@mail.utoronto.ca"}
  ]
  maintainers = [
    {name = "Nathaniel Starkman", email = "n.starkman@mail.utoronto.ca"}
  ]
  classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
  ]
  dependencies = [
    "typing_extensions>=4.2",
    "mypy_extensions",
  ]

[project.optional-dependencies]
  test = [
    "coverage[toml]",
    "pytest",
    "pytest-astropy-header",
    "pytest-cov",
    "pytest-doctestplus",
    "pytest-filter-subpackage",
  ]
  docs = [
    "IPython",
    "jupyter_client",
    "nbsphinx",
    "numpydoc",
    "pydata_sphinx_theme",
    "sphinx",
    "sphinx_automodapi",
    "sphinxcontrib.bibtex",
    "tomli",
  ]

[project.urls]
  homepage = "https://bound_class.readthedocs.io"
  repository = "https://github.com/nstarman/bound-class"
  documentation = "https://bound_class.readthedocs.io"


[tool.setuptools]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["py.typed"]


[tool.black]
  line-length = 120
  include = '\.pyi?$'
  exclude = '''
  /(
      \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  '''

[tool.coverage.run]
  omit = [
    "*/conftest.py",
    "*/setup_package.py",
    "*/tests/*",
  ]

[tool.coverage.report]
  exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about packages we have installed
    "except ImportError",
    # Don't complain if tests don't hit assertions
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain about script hooks
    "'def main(.*):'",
    # Ignore branches that don't pertain to this version of Python
    "pragma: py{ignore_python_version}",
    # Don't complain about IPython completion helper
    "def _ipython_key_completions_",
  ]


[tool.mypy]
  python_version = 3.9

  namespace_packages = true
  explicit_package_bases = true
  mypy_path = "$MYPY_CONFIG_FILE_DIR/src"

  strict = true
  disallow_subclassing_any = false
  show_error_codes = true
  show_error_context = true
  show_column_numbers = true
  pretty = true

  [[tool.mypy.overrides]]
    module = "tests/*"
    ignore_errors = true

  [[tool.mypy.overrides]]
    module = "docs/*"
    ignore_errors = true

  [[tool.mypy.overrides]]
    module = "pytest.*"
    ignore_missing_imports = true

  [[tool.mypy.overrides]]
    module = "pytest_astropy_header.display.*"
    ignore_missing_imports = true


[tool.pytest.ini_options]
  testpaths = ["tests", "docs"]
  astropy_header = "True"
  doctest_plus = "enabled"
  text_file_format = "rst"
  addopts = [
    '--doctest-rst',
    '--import-mode=importlib',
  ]
  filterwarnings = [
    # distutils
    "ignore:distutils Version classes are deprecated. Use packaging.version instead."
  ]


[tool.ruff]
target-version = "py38"
line-length = 120

select = ["ALL"]
ignore = [
  "ANN101",  # Missing type annotation for self in method
  "D105",  # Missing docstring in magic method
  "D107",  # Missing docstring in __init__
  "D203",  # 1 blank line required before class docstring
  "D213",  # Multi-line docstring summary should start at the second line
  "D401",

  # flake8-fixme (FIX)
  "FIX002",  # Line contains TODO

  # Pylint (PL)
  "PLC0105",  # `TypeVar` name does not reflect its covariance;

  # flake8-todos (TD)
  "TD002",  # Missing author in TODO
  "TD003",  # Missing issue link on the line following this TODO
]

[tool.ruff.per-file-ignores]
"docs/*.py" = ["INP001"]
"tests/*.py" = ["ANN", "D", "N8", "PLR2004", "S101", "SLF001"]
