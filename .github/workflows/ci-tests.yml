name: CI

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:

jobs:
  initial_checks:
    name: Mandatory checks before CI
    runs-on: ubuntu-latest
    steps:
    - name: Check base branch
      uses: actions/github-script@v3
      if: github.event_name == 'pull_request'
      with:
        script: |
          const skip_label = 'skip-basebranch-check';
          const { default_branch: allowed_basebranch } = context.payload.repository;
          const pr = context.payload.pull_request;
          if (pr.labels.find(lbl => lbl.name === skip_label)) {
            core.info(`Base branch check is skipped due to the presence of ${skip_label} label`);
            return;
          }
          if (pr.base.ref !== allowed_basebranch) {
            core.setFailed(`PR opened against ${pr.base.ref}, not ${allowed_basebranch}`);
          } else {
            core.info(`PR opened correctly against ${allowed_basebranch}`);
          }

  tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:

          - name: Python 3.10 with minimal dependencies and coverage
            os: ubuntu-latest
            python: '3.10'
            toxenv: py310-test-cov

          - name: Python 3.9 with all optional dependencies
            os: ubuntu-latest
            python: 3.9
            toxenv: py39-test-alldeps

          - name: Python 3.8 with oldest supported version of all dependencies
            os: ubuntu-latest
            python: 3.8
            toxenv: py38-test-oldestdeps

          # Mac and Windows:
          - name: Python 3.9 standard tests (macOS)
            os: macos-latest
            python: 3.9
            toxenv: py39-test

          - name: Python 3.9 standard tests (Windows)
            os: windows-latest
            python: 3.9
            toxenv: py39-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python on ${{ matrix.os }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install Python dependencies
        run: python -m pip install --upgrade tox codecov

      - name: Run tests
        run: tox ${{ matrix.toxargs }} -e ${{ matrix.toxenv }} -- ${{ matrix.toxposargs }}

      - name: Upload coverage report to codecov
        if: ${{ contains(matrix.toxenv,'-cov') }}
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml

# TODO!
# parallel_and_32bit:
